{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "users-svc",
    "description": ""
  },
  "servers": [
    {
      "url": "https://localhost:3000",
      "description": "TS Template API"
    }
  ],
  "paths": {
    "/integrations/users": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Create User",
        "operationId": "createUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/CreateUser"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Errors"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        }
      },
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "List Users",
        "operationId": "getUsersList",
        "parameters": [
          {
            "$ref": "#/components/parameters/pageLimitParam"
          },
          {
            "$ref": "#/components/parameters/pageNumberParam"
          },
          {
            "$ref": "#/components/parameters/sortingParam"
          },
          {
            "in": "query",
            "name": "filter[name]",
            "description": "Name of User",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "in": "query",
            "name": "filter[age]",
            "required": false,
            "description": "Age of user",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "in": "query",
            "name": "filter[role]",
            "required": false,
            "description": "Role of user. True if admin",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/User"
                      }
                    },
                    "links": {
                      "type": "object",
                      "$ref": "#/components/schemas/Links"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        }
      }
    },
    "/integrations/users/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "User identifier",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get User",
        "operationId": "getUser",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Errors"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        }
      },
      "patch": {
        "tags": [
          "Users"
        ],
        "summary": "Update User",
        "operationId": "updateUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/CreateUser"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Errors"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete User",
        "operationId": "deleteUser",
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Errors"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CreateUser": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CreateUserKey"
          },
          {
            "type": "object",
            "required": [
              "attributes"
            ],
            "properties": {
              "attributes": {
                "type": "object",
                "required": [
                  "name",
                  "age",
                  "role"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "User's name",
                    "example": "John"
                  },
                  "age": {
                    "type": "integer",
                    "description": "User's age",
                    "example": 32
                  },
                  "role": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        ]
      },
      "CreateUserKey": {
        "type": "object",
        "required": [
          "type",
          "id"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "create-users"
            ]
          },
          "id": {
            "type": "string",
            "example": "1"
          }
        }
      },
      "Errors": {
        "description": "Standard JSON:API error",
        "type": "object",
        "required": [
          "errors"
        ],
        "properties": {
          "errors": {
            "type": "array",
            "description": "Non empty array of errors occurred during request processing",
            "items": {
              "type": "object",
              "required": [
                "title",
                "status"
              ],
              "properties": {
                "title": {
                  "type": "string",
                  "description": "Title is a short, human-readable summary of the problem",
                  "example": "Bad Request"
                },
                "detail": {
                  "type": "string",
                  "description": "Detail is a human-readable explanation specific to this occurrence of the problem",
                  "example": "Request body was expected"
                },
                "status": {
                  "type": "integer",
                  "description": "Status is the HTTP status code applicable to this problem",
                  "example": 400,
                  "enum": [
                    400,
                    401,
                    403,
                    404,
                    409,
                    500
                  ]
                }
              }
            }
          }
        }
      },
      "Links": {
        "description": "Standard JSON:API links",
        "type": "object",
        "properties": {
          "first": {
            "type": "string",
            "description": "link on first page",
            "example": "/users?page[number]=0&page[limit]=15&page[order]=DESC"
          },
          "previous": {
            "type": "string",
            "description": "link on previous page",
            "example": "/users?page[number]=1&page[limit]=15&page[order]=DESC"
          },
          "self": {
            "type": "string",
            "description": "link on self",
            "example": "/users?page[number]=2&page[limit]=15&page[order]=DESC"
          },
          "next": {
            "type": "string",
            "description": "link on next page",
            "example": "/users?page[number]=3&page[limit]=15&page[order]=DESC"
          },
          "last": {
            "type": "string",
            "description": "link on last page",
            "example": "/users?page[number]=15&page[limit]=15&page[order]=DESC"
          }
        }
      },
      "UpdateUser": {
        "allOf": [
          {
            "$ref": "#/components/schemas/UpdateUserKey"
          },
          {
            "type": "object",
            "required": [
              "attributes"
            ],
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "User's name",
                    "example": "John"
                  },
                  "age": {
                    "type": "integer",
                    "description": "User's age",
                    "example": 32
                  },
                  "role": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        ]
      },
      "UpdateUserKey": {
        "type": "object",
        "required": [
          "type",
          "id"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "update-users"
            ]
          },
          "id": {
            "type": "string",
            "example": "1"
          }
        }
      },
      "User": {
        "allOf": [
          {
            "$ref": "#/components/schemas/UserKey"
          },
          {
            "type": "object",
            "required": [
              "attributes"
            ],
            "properties": {
              "attributes": {
                "type": "object",
                "required": [
                  "name",
                  "age",
                  "role",
                  "created_at"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of user",
                    "example": "John"
                  },
                  "age": {
                    "type": "integer",
                    "description": "Age of user",
                    "example": 32
                  },
                  "created_at": {
                    "type": "string",
                    "format": "time.Time",
                    "description": "User creation time",
                    "example": "2022-11-03T21:36:21.022589Z"
                  },
                  "role": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        ]
      },
      "UserKey": {
        "type": "object",
        "required": [
          "type",
          "id"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "users"
            ]
          },
          "id": {
            "type": "string",
            "example": "1"
          }
        }
      }
    },
    "responses": {
      "BadRequestError": {
        "description": "Bad Request Error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "errors"
              ],
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            }
          }
        }
      },
      "InternalError": {
        "description": "Internal Server Error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "errors"
              ],
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            }
          }
        }
      },
      "NotFound": {
        "description": "Not Found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "errors"
              ],
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              }
            }
          }
        }
      }
    },
    "parameters": {
      "pageLimitParam": {
        "in": "query",
        "name": "page[limit]",
        "required": false,
        "schema": {
          "type": "integer",
          "minimum": 1,
          "maximum": 100,
          "default": 15,
          "description": "Numbers of items per page to return."
        }
      },
      "pageNumberParam": {
        "in": "query",
        "name": "page[number]",
        "required": false,
        "schema": {
          "type": "integer"
        },
        "description": "The number of a page to return."
      },
      "sortingParam": {
        "in": "query",
        "name": "page[order]",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "ASC",
            "DESC"
          ],
          "default": "DESC",
          "description": "Order of records on the page. If sortingParam is not specified, order of records is by default sorted by ID."
        }
      }
    }
  }
}
